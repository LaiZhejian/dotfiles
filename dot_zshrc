# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/Users/dream/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    zsh-autosuggestions
    zsh-syntax-highlighting
    cmdtime
    fzf-tab
    fzf\&ls
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# custom setting
function __common_rc_get_shell() {
  sh=$(ps -o comm= -p $$)
  echo ${sh#-}
}

function __common_rc_init_ls() {
  if command -v eza >/dev/null 2>&1; then
    alias ls='eza --color=auto'
    alias ll='eza --color=auto --long --all --color-scale all --extended'
  elif command -v exa >/dev/null 2>&1; then
    alias ls='exa --color=auto'
    alias ll='exa --color=auto --long --all --color-scale --extended'
  else
    alias ls='ls --color=auto'
    alias ll='ls --color=auto -alh'
  fi
}

function __common_rc_init_fzf() {
  local EXT="$(__common_rc_get_shell)"
  local FZF_PATH
  if command -v fzf-share >/dev/null 2>&1; then
    FZF_PATH="$(fzf-share)"
  elif command -v fzf >/dev/null 2>&1; then
    if [ -f "/usr/share/fzf/completion.$EXT" ]; then
      FZF_PATH=/usr/share/fzf
    elif [ -f "/usr/local/share/fzf/completion.$EXT" ]; then
      FZF_PATH=/usr/local/share/fzf
    elif [ -f "/usr/share/doc/fzf/examples/completion.$EXT" ]; then
      FZF_PATH=/usr/share/doc/fzf/examples
    else 
      FZF_PATH="$(dirname $(readlink -f "$(which fzf)"))/../shell"
    fi
  fi
  [ -f "$FZF_PATH/completion.$EXT" ] && source "$FZF_PATH/completion.$EXT"
  [ -f "$FZF_PATH/key-bindings.$EXT" ] && source "$FZF_PATH/key-bindings.$EXT"

  export FZF_DEFAULT_COMMAND="fd --exclude={.git,.idea,.vscode,.sass-cache,node_modules,build}"
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND --type f"
  export FZF_ALT_C_COMMAND="$FZF_DEFAULT_COMMAND --type d"
  # export FZF_DEFAULT_OPTS="--layout=reverse --preview '(bat -f -n {} || cat {}) 2> /dev/null | head -500'"
}

function __common_rc_init_tldr() {
  if command -v tldr >/dev/null 2>&1; then
    export TLDR_LANGUAGE="en"
    # export TLDR_PAGES_SOURCE_LOCATION="https://cdn.jsdelivr.net/gh/tldr-pages/tldr/"
    # export TLDR_DOWNLOAD_CACHE_LOCATION="https://cdn.jsdelivr.net/gh/tldr-pages/tldr-pages.github.io/blob/main/assets/tldr.zip"
    export TLDR_PAGES_SOURCE_LOCATION="https://mirror.ghproxy.com/https://github.com/tldr-pages/tldr/blob/main/"
    export TLDR_DOWNLOAD_CACHE_LOCATION="https://mirror.ghproxy.com/https://github.com/tldr-pages/tldr-pages.github.io/blob/main/assets/tldr.zip"
    export TLDR_CACHE_ENABLED=1
    export TLDR_CACHE_MAX_AGE=8760
    export TLDR_AUTO_UPDATE_DISABLED=1
  fi
}

__common_rc_init_ls
__common_rc_init_fzf
__common_rc_init_tldr

command -v vi >/dev/null 2>&1 && export VISUAL='vi'
command -v vim >/dev/null 2>&1 && export VISUAL='vim'
command -v grep >/dev/null 2>&1 && alias grep='grep --color=auto'
# command -v zoxide >/dev/null 2>&1 && eval "$(zoxide init --cmd cd zsh)"
command -v bat >/dev/null 2>&1 && alias cat='bat'
command -v delta >/dev/null 2>&1 && alias diff='delta'
command -v tldr >/dev/null 2>&1 && export TLDR_AUTO_UPDATE_DISABLED=1

#proxy list
alias myproxy_on="export https_proxy=http://127.0.0.1:6152;export http_proxy=http://127.0.0.1:6152;export all_proxy=http://127.0.0.1:6152;export HTTPS_PROXY=http://127.0.0.1:6152;export HTTP_PROXY=http://127.0.0.1:6152;export ALL_PROXY=http://127.0.0.1:6152"
alias myproxy_off="unset https_proxy http_proxy all_proxy HTTPS_PROXY HTTP_PROXY ALL_PROXY"

myproxy_on

# download model
alias download="python /Users/dream/Documents/coding/ConductingExp/util/download_model.py"

# brew
alias abrew="arch -arm64 /opt/homebrew/bin/brew"
export HOMEBREW_NO_AUTO_UPDATE=true
export HOMEBREW_NO_INSTALL_CLEANUP=true

# huggingface
export HF_ENDPOINT=https://hf-mirror.com

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/dream/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/dream/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/dream/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/dream/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<
